/* CTF 1.8 */

trace {
	major = 1;
	minor = 8;
	uuid = "21800cf8-7482-42a9-84ee-29dcaddeb73a";
	byte_order = le;
	packet.header := struct {
		integer { size = 32; align = 8; signed = false; encoding = none; base = decimal; byte_order = native; } magic;
		integer { size = 8; align = 8; signed = false; encoding = none; base = decimal; byte_order = native; } uuid[16];
		integer { size = 32; align = 8; signed = false; encoding = none; base = decimal; byte_order = native; } stream_id;
	} align(8);
};

clock {
	name = main_clock;
	uuid = "25ca4d49-ca5a-4d39-ba19-0c073b9ca217";
	freq = 1000000000;
	precision = 1;
	offset_s = 0;
	offset = 0;
	absolute = false;
};

stream {
	id = 0;
	event.header := struct {
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } id;
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } timestamp;
	} align(1);

	packet.context := struct {
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } timestamp_begin;
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } timestamp_end;
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } content_size;
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } packet_size;
		integer { size = 32; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; map = clock.main_clock.value; } events_discarded;
	} align(1);
};

event {
	name = "hsa_runtime:kernel_start";
	id = 0;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } kernel_object;
		string { encoding = UTF8; } kernel_name;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
	} align(8);
};

event {
	name = "hsa_runtime:queue_created";
	id = 1;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
	} align(1);
};

event {
	name = "hsa_runtime:runtime_shut_down";
	id = 2;
	stream_id = 0;
	fields := struct {
	} align(1);
};

event {
	name = "hsa_runtime:aql_kernel_dispatch_packet_submitted";
	id = 3;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } packet_id;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } kernel_object;
		string { encoding = UTF8; } kernel_name;
	} align(8);
};

event {
	name = "hsa_runtime:kernel_end_nm";
	id = 4;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } kernel_object;
		string { encoding = UTF8; } kernel_name;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } timestamp;
	} align(8);
};

event {
	name = "hsa_runtime:function_entry";
	id = 5;
	stream_id = 0;
	fields := struct {
		string { encoding = UTF8; } name;
	} align(8);
};

event {
	name = "hsa_runtime:kernel_start_nm";
	id = 6;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } kernel_object;
		string { encoding = UTF8; } kernel_name;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } timestamp;
	} align(8);
};

event {
	name = "hsa_runtime:queue_destroyed";
	id = 7;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
	} align(1);
};

event {
	name = "hsa_runtime:runtime_initialized";
	id = 8;
	stream_id = 0;
	fields := struct {
	} align(1);
};

event {
	name = "hsa_runtime:function_exit";
	id = 9;
	stream_id = 0;
	fields := struct {
		string { encoding = UTF8; } name;
	} align(8);
};

event {
	name = "hsa_runtime:kernel_end";
	id = 10;
	stream_id = 0;
	fields := struct {
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } kernel_object;
		string { encoding = UTF8; } kernel_name;
		integer { size = 64; align = 1; signed = false; encoding = none; base = hexadecimal; byte_order = native; } agent_handle;
		integer { size = 64; align = 1; signed = false; encoding = none; base = decimal; byte_order = native; } queue_id;
	} align(8);
};

